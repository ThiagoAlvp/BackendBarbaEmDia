// <auto-generated />
using System;
using BackendBarbaEmDia.Infraestructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendBarbaEmDia.Infraestructure.Data.Migrations
{
    [DbContext(typeof(BarbeariaContext))]
    [Migration("20250422205104_TabelaTravamentos")]
    partial class TabelaTravamentos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("time(6)");

                    b.Property<int>("IdBarbeiro")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdServico")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdBarbeiro");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdServico");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Barbeiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Barbeiros");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.BarbeiroServico", b =>
                {
                    b.Property<int>("IdBarbeiro")
                        .HasColumnType("int");

                    b.Property<int>("IdServico")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TempoPersonalizado")
                        .HasColumnType("time(6)");

                    b.HasKey("IdBarbeiro", "IdServico");

                    b.HasIndex("IdServico");

                    b.ToTable("BarbeiroServicos");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("DuracaoPadrao")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Travamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdBarbeiro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBarbeiro");

                    b.ToTable("Travamentos");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Agendamento", b =>
                {
                    b.HasOne("BackendBarbaEmDia.Domain.Models.Database.Barbeiro", "Barbeiro")
                        .WithMany("Agendamentos")
                        .HasForeignKey("IdBarbeiro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BackendBarbaEmDia.Domain.Models.Database.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BackendBarbaEmDia.Domain.Models.Database.Servico", "Servico")
                        .WithMany("Agendamentos")
                        .HasForeignKey("IdServico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Barbeiro");

                    b.Navigation("Cliente");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.BarbeiroServico", b =>
                {
                    b.HasOne("BackendBarbaEmDia.Domain.Models.Database.Barbeiro", "Barbeiro")
                        .WithMany("BarbeiroServicos")
                        .HasForeignKey("IdBarbeiro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendBarbaEmDia.Domain.Models.Database.Servico", "Servico")
                        .WithMany("BarbeiroServicos")
                        .HasForeignKey("IdServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barbeiro");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Travamento", b =>
                {
                    b.HasOne("BackendBarbaEmDia.Domain.Models.Database.Barbeiro", "Barbeiro")
                        .WithMany("Travamentos")
                        .HasForeignKey("IdBarbeiro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barbeiro");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Barbeiro", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("BarbeiroServicos");

                    b.Navigation("Travamentos");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Cliente", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("BackendBarbaEmDia.Domain.Models.Database.Servico", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("BarbeiroServicos");
                });
#pragma warning restore 612, 618
        }
    }
}
